jQuery().ready( function(){
	new com_paulacska_pp();
});

/**
  *	Paula's homepage
  *	Written quickly!
  *
  * @author Lee
  *
  * @classdesc
  *	Usage:
  *	
  *	.portfolio - clicking elements of this class will display a portfolio of
  *		images linked from the HTML page (generated by Apache `mod_autoindex`)
  *		specified in the `data-uri` attribute, provided the links match
  *		 /_thumb/ and do not contain slashses. Full-sized images are expected
  *		 to have the same filename, without the `_thumb` string. Change the
  *		 regex by supplying the option `thumbRegex`.
  *
  * @constructor
  * @param {object} options
  */
function com_paulacska_pp( options ){
	var self = this;
	this.options = options || {};
	jQuery('.portfolio').each( function(i,j){
		var el = jQuery(j);
		var args = {
			intervalms:	3000,
			uri:		el.attr('data-uri'),
			onClose: function(){
				self.slideshow.start();
			}
		};
		if (el.attr('data-title')){
			args.title = el.attr('data-title');
		}
		if (self.options.thumbRegex){
			args.thumbRegex = self.options.thumbRegex;
		} else if (el.attr('data-thumbregex')){
			args.thumbRegex = el.attr('data-thumbregex');
		}
		if (el.attr('data-noslideshow')){
			args.slideshow = false;		
		} else {
			args.slideshow = true;
		}
		var portfolio = new com_paulacska_pp_portfolio(args);
		el.on('click', function(){
			portfolio.show();
		});
	});
}


/*
	@param options.uri - uri of `mod_autoindex` directory or similar HTML page
	@param options.onComplete - callback
*/
function com_paulacska_pp_imagesFromIndex( options ) {
	var self = this;
	this.options = options;
	if (!this.options.uri){
		throw 'No uri?';
	}
	
	this.images = [];
	
	jQuery.get( this.options.uri, function(rv) {
		var html = jQuery('<html/>', { html: rv });
		html.find('a').each( function(i,el){
			// Only links to images
			if (jQuery(el).attr('href').match(/(png|jpe?g|gif)$/i)){
				self.images.push( self.options.uri +'/'+ jQuery(el).attr('href') );
			}
		});
		if (self.options.onComplete){
			self.options.onComplete.call();
		}
	});
}



/*
	@param options.thumbRegex : Regular expression to identify thumbnails
	@param options.uri : HTML from which to extract links (mod_autoindex)
		Every image linked should have a thumbnail with same name and suffix  `_thumb` before the ext. 
*/
function com_paulacska_pp_portfolio( options ) {
	var self = this;
	this.options = options;
	if (!this.options.uri){
		throw 'No portfolio uri?';
	}
	
	this.options.slideshow	= this.options.slideshow || false;
	this.options.intervalms	= this.options.intervalms || 4000;
	this.options.thumbRegex = this.options.thumbRegex || /_thumb/ig;
	
	if ( typeof this.options.thumbRegex != 'object'){
		this.options.thumbRegex = new RegExp( this.options.thumbRegex, 'ig');
	}
	
	this.interval			= null;
	this.cache 				= [];	// All images
	this.bigImageIndex		= null;	// Currently showing
	this._oldBigImageIndex	= null;
	this.hash				= 'portfolio/'+this.options.uri;
	// Mask
	this.portfolioEl = jQuery('<div/>', {
		'title': 'Click here to go back',
		'class': 'portfolio-container'
	});
	this.portfolioEl.appendTo(document.body);
	this.portfolioEl.hide();
	
	// Cancel by clicking the mask
	this.portfolioEl.on('click', function(e){
		self.hide();
	});
	
	this.portfolioMaskEl = jQuery('<div/>', {
		'title': 'Click here to go back',
		'id': 'portfolio-bigimg-mask'
	});
	this.portfolioMaskEl.appendTo(document.body);
	this.portfolioMaskEl.hide();
	
	this.imagesFromIndex = new com_paulacska_pp_imagesFromIndex({
		uri: this.options.uri,
		onComplete: function(){
			self._create();
		}
	});
}

com_paulacska_pp_portfolio.prototype._create = function(){
	var self = this;
	var j = -1;
	if (this.options.title){
		jQuery('<h2/>', { html: this.options.title }).
			prependTo(self.portfolioEl);
	}
	
	jQuery.each( this.imagesFromIndex.images, function(idx,i){
		
		// For each thumbnail, create a clickable image
		if (i.match( self.options.thumbRegex )){
			j++;
			self.cache[j] = {};
			self.cache[j].src = i.replace( self.options.thumbRegex, '');
			var title = self.cache[j].src.match(/([^\/]+)\.\w+$/)[1].toLowerCase().replace(/[_-]+/gi, ' ');

			self.cache[j].img = new Image();
			self.cache[j].img.src = i;
			self.cache[j].bigImg = jQuery('<img/>', {
			// src: self.cache[j].src });
				alt: title,
				title: title
			});
			
			self.cache[j].bigImg.appendTo( self.portfolioMaskEl );
			self.cache[j].bigImg.hide();
			
			var thumbImage = jQuery('<img/>', {
				// 'class':	'thumb',
				'src':		i,
				'data-index': j,
				'alt':		title,
				'title':	title
			});
			thumbImage.on('click', function(e){
				// Why is 'j' not frozen by closure?
				self.showBigImage( jQuery(e.target).attr('data-index') );
				e.preventDefault();
				return false;
			});
			thumbImage.appendTo( self.portfolioEl );
		}
	});
};

com_paulacska_pp_portfolio.prototype.show = function(){
	location.hash = this.hash;
	var self = this;
	this.portfolioEl.show();
	this.portfolioEl.css({
		'width': '100%',
		'height': jQuery(document.body).css('height'),
		'overflow': 'hidden'
	});
	window.scrollTo( 0, 0 );
	
	// Cancel with back,esc
	jQuery(window).on("navigate", function (e, data) {
		if (data.state.direction == 'back') {
			e.preventDefault();
			self.hide();
		}
	});
	jQuery(document.body).on('keyup', function(e){
		if (e.keyCode == 8 || e.keyCode == 224 || e.keyCode == 27){
			e.preventDefault();
			self.hide();
		}
	});
};

com_paulacska_pp_portfolio.prototype.hide = function(){
	location.hash = '';
	this.portfolioEl.hide();
	jQuery(window).off("navigate");
	jQuery(document.body).off('keyup');
};

com_paulacska_pp_portfolio.prototype.closeBigImage = function(index){
	location.hash = this.hash;
	this.hideBigImgNav();
	jQuery(document.body).off('keyup');
	jQuery(document.body).off('click');
	jQuery(document.body).off('mousemove');
	this.cache[ this.bigImageIndex ].bigImg.hide();
	this.portfolioMaskEl.hide();
	if (this.interval != null){
		clearInterval(this.interval);	
	}
	jQuery(document.body).css({
		height: 'auto',
		overflow: 'auto'
	});
};

com_paulacska_pp_portfolio.prototype.showBigImage = function(index){
	var self = this;
	
	if (index == null) {
		throw 'showBigImage now requires in index to set bigImageIndex';
	}
	
	if (this.bigImageIndex != null) {
		this._oldBigImageIndex = this.bigImageIndex;
	}
	
	this.bigImageIndex = index;
	location.hash = self.cache[ this.bigImageIndex ].src;

	this.portfolioMaskEl.show();
	
	// Stop all the scrolling:
	jQuery(document.body).css({
		height: jQuery(window).height(),
		overflow: 'hidden'
	});
	this.portfolioMaskEl.css({
		top: jQuery(document).scrollTop()
	});
	
	if (typeof self.cache[ this.bigImageIndex ].bigImg.attr('src') == 'undefined'){
		this.portfolioMaskEl.css('cursor', 'wait');
		self.cache[ this.bigImageIndex ].bigImg.attr('src', self.cache[ this.bigImageIndex ].src);
		self.cache[ this.bigImageIndex ].bigImg.on('load', function(){
			self.portfolioMaskEl.css('cursor', 'default');
			self.loadedBigImage();
		});
	} else {
		self.loadedBigImage();
	}
};

com_paulacska_pp_portfolio.prototype.loadedBigImage = function(index){
	var self = this;
	
	jQuery(document.body).off('click');
	jQuery(document.body).off('keyup');
		
	// To scale to element size ala CSS3 'contain', note the size may change, so get this every time:
	this.cache[this.bigImageIndex].bigImg.css({
		height: jQuery(document.body).height()
	});
	var contWidth 	= jQuery(window).width();
	var contHeight	= jQuery(window).height();
	var imgWidth	= this.cache[this.bigImageIndex].bigImg.width();
	var imgHeight	= this.cache[this.bigImageIndex].bigImg.height();
//	if (imgWidth >= imgHeight ){
	if (imgHeight > contHeight){
		this.cache[this.bigImageIndex].bigImg.css('height', contHeight);
	} else if (imgWidth > contWidth){
		this.cache[this.bigImageIndex].bigImg.css('width', contWidth);
	}
//	} else {
//		this.cache[this.bigImageIndex].bigImg.css('width', contWidth);
//	}
	
	// Position new element:
	this.cache[this.bigImageIndex].bigImg.css({
		'position': 'absolute',
		'left':  	contWidth/2  - imgWidth  / 2,
		'top':  	contHeight/2 - imgHeight / 2,
		// 	Hide new image behind old, to fade in
		'opacity':	0
	});
	this.cache[this.bigImageIndex].bigImg.show();
	
	var ready = function(){
		self._oldBigImageIndex = self.bigImageIndex;
	
		// Close the image on a click or key
		jQuery(document.body).on('click', function(e){
			e.preventDefault();
			self.closeBigImage();
			return false;
		});
		
		// Cue the next image:
		if (self.options.slideshow){
			clearTimeout(self.interval);
			self.interval = setTimeout(function() {
				self.nextBigImg();
			}, self.options.intervalms);

			// Allow left and right keys to change image
			jQuery(document.body).on('keyup', function(e){
				e.preventDefault();
				if ( e.keyCode == 39 || e.keyCode == 32){
					self.nextBigImg();
				} else if (e.keyCode == 37) {
					self.previousBigImg();
				} else {
					self.closeBigImage();
				}
				return false;
			});
		}
		
		// No slideshow
		else {
			jQuery(document.body).on('mousemove', function(e){
				var w = jQuery(window).width();
				var p = w / 3;
				if (e.pageX < p || e.pageX > w-p){
					self.showBigImgNav();
				} else {
					self.hideBigImgNav();
				}
			});
		}
	};
	
	
	if (self._oldBigImageIndex == null){
		this.cache[this.bigImageIndex].bigImg.css({
			'opacity': 1
		});
		ready.call();
	}
	
	else {
		this.cache[this.bigImageIndex].bigImg.animate(
			{ opacity: 1 },
			666,
			function(){
				self.cache[self._oldBigImageIndex].bigImg.css({
					'opacity': 0
				});
				self.cache[self._oldBigImageIndex].bigImg.hide();
				ready.call();
			}
		);
	}
};


com_paulacska_pp_portfolio.prototype.showBigImgNav = function(){
	if ( jQuery('#bigImgNavLeft').length === 0 ){
		// Initiate navigation
		var self = this;
		var h = jQuery(window).height();
		var l = jQuery('<div/>', { id: 'bigImgNavLeft', text:'<', title:'Previous Image' });
		l.css('top', (h/2) - (l.height()/2));
		l.on('click', function(e){
			e.preventDefault();
			e.stopPropagation();
			self.previousBigImg();
		});
		jQuery(document.body).append(l);
		var r = jQuery('<div/>', { id: 'bigImgNavRight', text:'>', title:'Next Image' });
		r.css('top', (h/2) - (l.height()/2));
		r.on('click', function(e){
			e.preventDefault();
			e.stopPropagation();
			self.nextBigImg();
		});
		jQuery(document.body).append(r);
	} else {
		jQuery('#bigImgNavLeft').show();
		jQuery('#bigImgNavRight').show();
	}
};

com_paulacska_pp_portfolio.prototype.hideBigImgNav = function(){
	if ( jQuery('#bigImgNavLeft').length > 0 ){
		jQuery('#bigImgNavLeft').hide();
		jQuery('#bigImgNavRight').hide();
	}
};

com_paulacska_pp_portfolio.prototype.nextBigImg = function(){
	var nextIndex = parseInt(this.bigImageIndex, 10) +1;
	if (nextIndex >= this.cache.length){
		nextIndex = 0;
	}
	this.showBigImage( nextIndex );
};

com_paulacska_pp_portfolio.prototype.previousBigImg = function(){
	var nextIndex = parseInt(this.bigImageIndex, 10) -1;
	if (nextIndex < 0 ){
		nextIndex = this.cache.length -1;
	}
	this.showBigImage(nextIndex);
};


